txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene
}
info = AnnotationDbi::select(orgdb,
keys = symbols,
keytype = 'SYMBOL',
columns = columns)
info = info[!duplicated(info$SYMBOL), ]
info$GO = AnnotationDbi::mapIds(orgdb,
keys = info$SYMBOL,
keytype = 'SYMBOL',
column = 'GO')
info$GOTERM = AnnotationDbi::mapIds(GO.db::GO.db,
keys = info$GO,
keytype = 'GOID',
column = 'TERM')
info$TXCHROM = AnnotationDbi::mapIds(txdb,
keys = info$ENTREZID,
keytype = 'GENEID',
column = 'TXCHROM')
info
}
get_gene_info(symbols = c('Pzp'), species = 'Mm')
Homo.sapiens
Homo.sapiens::Homo.sapiens
keytypes(org.Hs.eg.db)
keytypes(org.Hs.eg.db::org.Hs.eg.db)
nn <- as.data.frame(org.Hs.eg.db::org.Hs.eg.db)
a <- keys(org.Hs.eg.db::org.Hs.eg.db, keytype = 'SYMBOL')
head(a)
nn <- select(org.Hs.eg.db::org.Hs.eg.db, keys = a[1], keytype = 'SYMBOL', columns = keytypes(org.Hs.eg.db::org.Hs.eg.db))
library(GO.db)
use_package('GO.db')
use_package('AnnotationDbi')
use_cc0_license()
get_gene_info('Pzp', species = 'Mm')
#' @param symbols character vector of HGNC gene symbols
#' @param species The species of gene. only support Hs or Mm
#' @export
#' @rdname get_gene_info
#' @examples
#' \dontrun{
#' get_gene_info('TP53')
#' get_gene_info('Pzp', species = 'Mm')
#' }
#'
get_gene_info <- function(symbols, species = c('Hs', 'Mm')) {
# see https://davetang.org/muse/2013/12/16/bioconductor-annotation-packages/
species <- match.arg(species)
columns = c('ENTREZID', 'GENENAME', 'GENETYPE')
if (species == 'Hs') {
orgdb <- org.Hs.eg.db::org.Hs.eg.db
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene
} else {
orgdb <- org.Mm.eg.db::org.Mm.eg.db
txdb <- TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene
}
info = AnnotationDbi::select(orgdb,
keys = symbols,
keytype = 'SYMBOL',
columns = columns)
info = info[!duplicated(info$SYMBOL), ]
info$GO = AnnotationDbi::mapIds(orgdb,
keys = info$SYMBOL,
keytype = 'SYMBOL',
column = 'GO')
info$GOTERM = AnnotationDbi::mapIds(GO.db::GO.db,
keys = info$GO,
keytype = 'GOID',
column = 'TERM')
info$TXCHROM = AnnotationDbi::mapIds(txdb,
keys = info$ENTREZID,
keytype = 'GENEID',
column = 'TXCHROM')
info
}
get_gene_info('Pzp', species = 'Mm')
orgdb <- Homo.sapiens::Homo.sapiens
genes <- keys(orgdb, keytype='SYMBOL')
head(genes)
styler:::style_selection()
use_pipe()
use_package('dplyr')
use_package('Homo.sapiens')
use_package('Mus.musculus')
keytypes(orgdb)
orgdb
genes <- 'TP53'
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
)
out
head(out)
out <- AnnotationDbi::select(orgdb,
keys = c('TP53', 'Pzp'),
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
)
head(out)
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
) %>%
dplyr::filter(EXONCHROM %in% canonical.chr) %>%
dplyr::group_by(EXONCHROM, SYMBOL) %>%
dplyr::summarize(
n_allowed_exons = length(unique(EXONRANK)),
n_total_exons = length(unique(EXONID)),
exon_start = min(EXONSTART),
exon_end = max(EXONEND),
gene_length = exon_end + 1 - exon_start
) %>%
dplyr::rename(gene = SYMBOL, exon_chr = EXONCHROM)
library(tidyverse)
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
) %>%
dplyr::filter(EXONCHROM %in% canonical.chr) %>%
dplyr::group_by(EXONCHROM, SYMBOL) %>%
dplyr::summarize(
n_allowed_exons = length(unique(EXONRANK)),
n_total_exons = length(unique(EXONID)),
exon_start = min(EXONSTART),
exon_end = max(EXONEND),
gene_length = exon_end + 1 - exon_start
) %>%
dplyr::rename(gene = SYMBOL, exon_chr = EXONCHROM)
AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
) %>%
dplyr::filter(EXONCHROM %in% canonical.chr) %>%
dplyr::group_by(EXONCHROM, SYMBOL)
canonical.chr <- paste0("chr", c(1:22, "X", "Y"))
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
) %>%
dplyr::filter(EXONCHROM %in% canonical.chr) %>%
dplyr::group_by(EXONCHROM, SYMBOL) %>%
dplyr::summarize(
n_allowed_exons = length(unique(EXONRANK)),
n_total_exons = length(unique(EXONID)),
exon_start = min(EXONSTART),
exon_end = max(EXONEND),
gene_length = exon_end + 1 - exon_start
) %>%
dplyr::rename(gene = SYMBOL, exon_chr = EXONCHROM)
out
?dplyr::group_by
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
) %>%
dplyr::filter(EXONCHROM %in% canonical.chr) %>%
dplyr::group_by(EXONCHROM, SYMBOL, .add = TRUE) %>%
dplyr::summarize(
n_allowed_exons = length(unique(EXONRANK)),
n_total_exons = length(unique(EXONID)),
exon_start = min(EXONSTART),
exon_end = max(EXONEND),
gene_length = exon_end + 1 - exon_start
) %>%
dplyr::rename(gene = SYMBOL, exon_chr = EXONCHROM)
?dplyr::summarize
mtcars %>%
group_by(cyl, vs) %>%
summarise(cyl_n = n())
orgdb
orgdb <- Mus.musculus::Mus.musculus
out <- AnnotationDbi::select(orgdb,
keys = c('Pzp'),
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
)
head(out)
a <- keys(orgdb, keytype = 'EXONCHROM')
keytypes(orgdb)
genes <- keys(orgdb, keytype = "SYMBOL")
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
)
head(out)
unique(out$EXONCHROM)
?setNames
#'
#' @note
#' Only consider the gene on chr 1-22, chrX and chrY
#'
#' @export
#' @rdname get_exons_length
#' @example
#' get_gene_info('TP53')
#' get_gene_info('Pzp', species = 'Mm')
#'
get_exons_length <- function(genes = NULL, species = c("Hs", "Mm")) {
if (species == "Hs") {
orgdb <- Homo.sapiens::Homo.sapiens
} else {
orgdb <- Mus.musculus::Mus.musculus
}
canonical.chr <- paste0("chr", c(1:22, "X", "Y"))
if (is.null(genes)) {
genes <- keys(orgdb, keytype = "SYMBOL")
}
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
) %>%
dplyr::filter(EXONCHROM %in% canonical.chr) %>%
dplyr::group_by(EXONCHROM, SYMBOL) %>%
dplyr::summarize(
n_allowed_exons = length(unique(EXONRANK)),
n_total_exons = length(unique(EXONID)),
exon_start = min(EXONSTART),
exon_end = max(EXONEND),
gene_length = exon_end + 1 - exon_start
) %>%
dplyr::rename(gene = SYMBOL, exon_chr = EXONCHROM)
setNames(out$n_allowed_exons, out$gene)
}
get_exons_length('TP53')
#'
#' @note
#' Only consider the gene on chr 1-22, chrX and chrY
#'
#' @export
#' @rdname get_exons_length
#' @example
#' get_gene_info('TP53')
#' get_gene_info('Pzp', species = 'Mm')
#'
get_exons_length <- function(genes = NULL, species = c("Hs", "Mm")) {
species <- match.arg(species)
if (species == "Hs") {
orgdb <- Homo.sapiens::Homo.sapiens
} else {
orgdb <- Mus.musculus::Mus.musculus
}
canonical.chr <- paste0("chr", c(1:22, "X", "Y"))
if (is.null(genes)) {
genes <- keys(orgdb, keytype = "SYMBOL")
}
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
) %>%
dplyr::filter(EXONCHROM %in% canonical.chr) %>%
dplyr::group_by(EXONCHROM, SYMBOL) %>%
dplyr::summarize(
n_allowed_exons = length(unique(EXONRANK)),
n_total_exons = length(unique(EXONID)),
exon_start = min(EXONSTART),
exon_end = max(EXONEND),
gene_length = exon_end + 1 - exon_start
) %>%
dplyr::rename(gene = SYMBOL, exon_chr = EXONCHROM)
setNames(out$n_allowed_exons, out$gene)
}
get_exons_length('TP53')
#'
#' @note
#' Only consider the gene on chr 1-22, chrX and chrY
#'
#' @export
#' @rdname get_exons_info
#' @example
#' get_exons_info('TP53')
#' get_exons_info('Pzp', species = 'Mm')
#'
get_exons_info <- function(genes = NULL, species = c("Hs", "Mm")) {
species <- match.arg(species)
if (species == "Hs") {
orgdb <- Homo.sapiens::Homo.sapiens
} else {
orgdb <- Mus.musculus::Mus.musculus
}
canonical.chr <- paste0("chr", c(1:22, "X", "Y"))
if (is.null(genes)) {
genes <- keys(orgdb, keytype = "SYMBOL")
}
out <- AnnotationDbi::select(orgdb,
keys = genes,
keytype = "SYMBOL",
columns = c("EXONID", "EXONRANK", "EXONCHROM", "EXONSTART", "EXONEND")
) %>%
dplyr::filter(EXONCHROM %in% canonical.chr) %>%
dplyr::group_by(EXONCHROM, SYMBOL) %>%
dplyr::summarize(
n_allowed_exons = length(unique(EXONRANK)),
n_total_exons = length(unique(EXONID)),
exon_start = min(EXONSTART),
exon_end = max(EXONEND),
gene_length = exon_end + 1 - exon_start
) %>%
dplyr::rename(gene = SYMBOL, exon_chr = EXONCHROM)
return(out)
}
get_exons_length('TP53')
get_exons_info('TP53')
?setNames
use_package('zzz')
use_r('zzz')
devtools::load_all(".")
rm(list = c("get_exons_info", "get_gene_info"))
devtools::load_all(".")
?get_gene_info
?allowedExons
get_gene_info('TP53')
keytypes(Homo.sapiens)
keytypes(Homo.sapiens::Homo.sapiens)
keys(Homo.sapiens::Homo.sapiens)
keytypes(Homo.sapiens::Homo.sapiens)
keys(Homo.sapiens::Homo.sapiens)
a <- keys(Homo.sapiens::Homo.sapiens, keytype = 'SYMBOL')
head(a)
?keys
columns(Homo.sapiens::Homo.sapiens)
AnnotationDbi::select(Homo.sapiens::Homo.sapiens,keys = 'TP53', keytype = 'SYMBOL', columns = c('ENTREZID', 'GENENAME', 'GENETYPE', 'GO', 'GOID', 'TXCHROM'))
AnnotationDbi::select(Homo.sapiens::Homo.sapiens,keys = 'TP53', keytype = 'SYMBOL', columns = c('ENTREZID', 'GENENAME', 'GENETYPE', 'GO', 'GOID', 'TXCHROM')) %>% head()
get_exons_info('TP53')
get_gene_info('TP53')
get_genes = function(keytype) {
.genes = function() {
org = Homo.sapiens::Homo.sapiens
AnnotationDbi::keys(org, keytype=keytype)
}
}
get_refseq=get_genes('REFSEQ')
get_refseq
get_refseq(keytype = 'REFSEQ')
is_annotation = function(keytype) {
.is_annotation = function(keys) {
org = Homo.sapiens::Homo.sapiens
universe = AnnotationDbi::keys(org, keytype=keytype)
keys %in% universe
}
}
is_symbol = is_annotation('SYMBOL')
is_symbol()
is_symbol('TP53')
is_symbol()
is_symbol
get_genes = function(keytype) {
.genes = function() {
org = Homo.sapiens::Homo.sapiens
AnnotationDbi::keys(org, keytype=keytype)
}
}
get_ucsc=get_genes('UCSCKG')
get_ucsc
get_ucsc()
get_genes = function(keytype, species = c('Hs', 'Mm')) {
species <- match.arg(species)
.genes = function() {
if (species == 'Hs') <- {
get_genes = function(keytype, species = c('Hs', 'Mm')) {
species <- match.arg(species)
.genes = function() {
if (species == 'Hs') {
org <- Homo.sapiens::Homo.sapiens
} else {
org <- Mus.musculus::Mus.musculus
}
AnnotationDbi::keys(org, keytype=keytype)
}
}
get_ucsc=get_genes('UCSCKG')
get_ucsc
get_genes = function(keytype, species = c('Hs', 'Mm')) {
species <- match.arg(species)
.genes = function(species) {
if (species == 'Hs') {
org <- Homo.sapiens::Homo.sapiens
} else {
org <- Mus.musculus::Mus.musculus
}
AnnotationDbi::keys(org, keytype=keytype)
}
}
get_ucsc=get_genes('UCSCKG')
get_ucsc
head(get_ucsc('Hs'))
head(get_ucsc(Mm))
head(get_ucsc('Mm'))
get_ucsc('Mm')
get_ucsc
get_ucsc(species = 'Mm')
use_package('get_info')
use_r('get_info')
#' Build function to select info
#'
#' Build function based on some argument
#'
#' @param name description
#'
#'
get_genes = function(keytype) {
.genes = function(species) {
if (species == 'Hs') {
org <- Homo.sapiens::Homo.sapiens
} else {
org <- Mus.musculus::Mus.musculus
}
AnnotationDbi::keys(org, keytype=keytype)
}
}
get_genes('UCSCKG')
get_ucsc=get_genes('UCSCKG')
get_ucsc
AnnotationDbi::select(Homo.sapiens::Homo.sapiens, keys = 'TP53', keytype = 'SYMBOL', columns = c('UCSCKG'))
AnnotationDbi::select(Homo.sapiens::Homo.sapiens, keys = 'TP53', keytype = 'SYMBOL', columns = c('UCSCKG')) %>% head()
?Homo.sapiens::Homo.sapiens
?keytypes
?columns
keytypes(Homo.sapiens::Homo.sapiens)
AnnotationDbi::select(Homo.sapiens::Homo.sapiens, keys = 'TP53', keytype = 'SYMBOL', columns = c('UCSCKG', 'ACCNUM')) %>% head()
help("SYMBOL")
AnnotationDbi::select(Homo.sapiens::Homo.sapiens, keys = 'TP53', keytype = 'SYMBOL', columns = c('UCSCKG', 'ACCNUM', 'ALIAS')) %>% head()
AnnotationDbi::select(Homo.sapiens::Homo.sapiens, keys = 'TP53', keytype = 'SYMBOL', columns = c('UCSCKG', 'ACCNUM', 'ALIAS', 'ARACYC')) %>% head()
AnnotationDbi::select(Homo.sapiens::Homo.sapiens, keys = 'TP53', keytype = 'SYMBOL', columns = c('UCSCKG', 'ACCNUM', 'ALIAS', 'ENSEMBLTRANS')) %>% head()
AnnotationDbi::select(Homo.sapiens::Homo.sapiens, keys = 'TP53', keytype = 'SYMBOL', columns = c('UCSCKG', 'ACCNUM', 'ALIAS', 'ENSEMBL')) %>% head()
devtools::load_all(".")
?get_genebank
devtools::load_all(".")
rm(list = c("get_refseq", "get_ucsc"))
devtools::load_all(".")
?get_genebank
?get_ucsc
?get_ucsc()
View(AnnotationDbi::keys)
library(Seurat)
?subset
use_r('check_info')
devtools::load_all(".")
?geneInfo::get_ensembl
??geneInfo::get_ensembl
styler:::style_active_file()
help('SYMBOL')
?ACCNUM
vignette('ACCNUM', package = 'AnnotationDbi')
?AnnotationDbi::ACCNUM
AnnotationDbi::AnnotationDb-objects
?AnnotationDbi::AnnotationDb-objects
?AnnotationDb-objects
ucsc2entrez = x2y('UCSCKG','ENTREZ')
devtools::load_all(".")
geneInfo::allowedExons()
geneInfo::get_ensembl(species = 'Hs')
?geneInfo::get_ensembl()
?geneInfo::get_ucsc
?geneInfo::get_ucsc()
?geneInfo::allowedExons
?geneInfo::get_exons_info
?geneInfo::get_id
org <- Homo.sapiens::Homo.sapiens
AnnotationDbi::keys(org, keytype='UCSCKG')
AnnotationDbi::keys(org, keytype=c('UCSCKG', 'REFSEQ'))
devtools::load_all(".")
?geneInfo::get_ucsc
?geneInfo::get_id
Homo.sapiens
Homo.sapiens::Homo.sapiens
?`[`
devtools::load_all(".")
?get_id
devtools::load_all(".")
?analyze_data
?visualize_data
?analyze_data
?preprocess_data
devtools::load_all(".")
?analyze_data
?preprocess_data
devtools::load_all(".")
?analyze_data
?data_cleaning
?visualize_data
vignette("rd-formatting")
devtools::load_all(".")
?sum1
??sum1
?funs
?aliases
devtools::load_all(".")
?sin_ish
?trig
?GetAssay
?GetAssay.Seurat
?subset
?`[`
?NormalizeData
?tibble::add_case
?tibble::as_tibble.data.frame
devtools::load_all(".")
?trig
?sin_ish
?sin_ish
?dnorm
?pnorm
install.packages("D:/code/Github/geneInfo_0.1.0.tar.gz", repos = NULL, type = "source")
