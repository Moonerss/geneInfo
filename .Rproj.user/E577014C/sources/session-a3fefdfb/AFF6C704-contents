#' Build function to check info
#'
#' Build function based on some argument
#'
#' @param keytype keytype in annotation package
#'
#' @return return a function object to check symbol whether in specific type
#'
#'
is_annotation <- function(keytype) {
  .is_annotation <- function(genes, species) {
    if (species == "Hs") {
      org <- Homo.sapiens::Homo.sapiens
    } else {
      org <- Mus.musculus::Mus.musculus
    }
    universe <- AnnotationDbi::keys(org, keytype = keytype)
    genes %in% universe
  }
}

is_symbol <- is_annotation("SYMBOL")

is_entrez <- is_annotation("ENTREZID")

is_ensembl <- is_annotation("ENSEMBL")

is_refseq <- is_annotation("REFSEQ")

is_accnum <- is_annotation("ACCNUM")

is_ucsc <- is_annotation("UCSCKG")


#' Check gene id type
#'
#' Check gene id type
#'
#' @param keytype keytype in annotation package
#' @param aliasesBeforeSymbols check aliases before Symbols. Default FALSE.
#' @param priority The priority to check gene id type. you can set a vector of id type.
#'
#' @seealso \code{\link[AnnotationDbi]{ACCNUM}}
#'
#' @return return a vector with symbol type
#'
#'
which_annotation <- function(keytype, aliasesBeforeSymbols = FALSE, priority = NULL) {
  keytypes <- c("SYMBOL", "ALIAS", "ENTREZID", "ENSEMBL", "REFSEQ", "ACCNUM", "UCSCKG",
                "TXID", "ENSEMBLTRANS", "ENSEMBLPROT", "UNIPROT", "UNIGENE", "EXONID", "ENZYME")

  if (aliasesBeforeSymbols) {
    if (!is.null(priority) && priority != "SYMBOL") {
      keytypes[1:2] <- keytypes[2:1]
    } else {
      message("You set priority to 'SYMBOL' so aliasesBeforeSymbols will be ignored.")
    }
  }

  if (!is.null(priority)) {
    if (!priority %in% keytypes) {
      stop(priority, " does not exist")
    } else {
      keytypes <- c(priority, setdiff(keytypes, priority))
    }
  }

  .call <- function(keytype) {
    if (any(is.na(nams))) {
      nams[is.na(nams) & is_annotation(keytype)(keys)] <<- keytype
    }
  }

  nams <- rep(NA, length(keys))
  sapply(keytypes, .call)
  setNames(nams, keys)
}



#' Trigonometric approximations
#' @param x Input, in radians.
#' @aliases sin_ish cos_ish cos_ish
#' @name trig
NULL

#' @rdname trig
#' @export
sin_ish <- function(x) x - x^3 / 6

#' @rdname trig
#' @export
cos_ish <- function(x) 1 - x^2 / 2

#' @rdname trig
#' @export
cos_ish <- function(x) x + x^3 / 3
